#pragma once

#include <cmath>
#include <stdexcept>
#include <vector>

namespace kynema::math {

inline std::vector<double> GetGllLocations(size_t order) {
    switch (order) {
        case 1UL:
            return std::vector{-1., 1.};
        case 2UL:
            return std::vector{-1., 0., 1.};
        case 3UL:
            return std::vector{-1., -std::sqrt(1. / 5.), std::sqrt(1. / 5.), 1.};
        case 4UL:
            return std::vector{-1., -std::sqrt(3. / 7.), 0., std::sqrt(3. / 7.), 1.};
        case 5UL:
            return std::vector{
                -1.,
                -std::sqrt((1. / 3.) + (2. * std::sqrt(7.) / 21.)),
                -std::sqrt((1. / 3.) - (2. * std::sqrt(7.) / 21.)),
                std::sqrt((1. / 3.) - (2. * std::sqrt(7.) / 21.)),
                std::sqrt((1. / 3.) + (2. * std::sqrt(7.) / 21.)),
                1.
            };
        case 6UL:
            return std::vector{
                -1.,
                -std::sqrt((5. / 11.) + ((2. / 11.) * std::sqrt(5. / 3.))),
                -std::sqrt((5. / 11.) - ((2. / 11.) * std::sqrt(5. / 3.))),
                0.,
                std::sqrt((5. / 11.) - ((2. / 11.) * std::sqrt(5. / 3.))),
                std::sqrt((5. / 11.) + ((2. / 11.) * std::sqrt(5. / 3.))),
                1.
            };
        case 7UL:
            return std::vector{
                -1.,
                -0.87174014850960657,
                -0.59170018143314229,
                -0.20929921790247885,
                0.20929921790247885,
                0.59170018143314229,
                0.87174014850960657,
                1.
            };
        case 8UL:
            return std::vector{-1., -0.89975799541146018, -0.67718627951073773, -0.36311746382617816,
                               0.,  0.36311746382617816,  0.67718627951073773,  0.89975799541146018,
                               1.};
        case 9UL:
            return std::vector{
                -1.,
                -0.91953390816645886,
                -0.73877386510550502,
                -0.47792494981044453,
                -0.16527895766638701,
                0.16527895766638701,
                0.47792494981044448,
                0.73877386510550502,
                0.91953390816645886,
                1.
            };
        case 10UL:
            return std::vector{-1.,
                               -0.93400143040805916,
                               -0.78448347366314441,
                               -0.56523532699620493,
                               -0.29575813558693936,
                               0.,
                               0.29575813558693936,
                               0.56523532699620493,
                               0.78448347366314441,
                               0.93400143040805916,
                               1.};
        case 11UL:
            return std::vector{
                -1.,
                -0.94489927222288217,
                -0.81927932164400663,
                -0.63287615303186073,
                -0.39953094096534891,
                -0.13655293285492756,
                0.13655293285492756,
                0.39953094096534891,
                0.63287615303186073,
                0.81927932164400663,
                0.94489927222288217,
                1.
            };
        case 12UL:
            return std::vector{
                -1.,
                -0.95330984664216400,
                -0.84634756465187233,
                -0.68618846908175746,
                -0.48290982109133623,
                -0.24928693010623998,
                0.,
                0.24928693010623998,
                0.48290982109133623,
                0.68618846908175746,
                0.84634756465187233,
                0.95330984664216400,
                1.
            };
        case 13UL:
            return std::vector{
                -1.,
                -0.95993504526726092,
                -0.86780105383034722,
                -0.72886859909132617,
                -0.55063940292864699,
                -0.34272401334271285,
                -0.11633186888370387,
                0.11633186888370387,
                0.34272401334271285,
                0.55063940292864710,
                0.72886859909132617,
                0.86780105383034722,
                0.95993504526726092,
                1.
            };
        case 14UL:
            return std::vector{
                -1.,
                -0.96524592650383856,
                -0.88508204422297632,
                -0.76351968995181518,
                -0.60625320546984574,
                -0.42063805471367249,
                -0.21535395536379423,
                0.,
                0.21535395536379423,
                0.42063805471367249,
                0.60625320546984574,
                0.76351968995181518,
                0.88508204422297632,
                0.96524592650383856,
                1.
            };
        case 15UL:
            return std::vector{
                -1.,
                -0.96956804627021798,
                -0.89920053309347214,
                -0.79200829186181509,
                -0.65238870288249307,
                -0.48605942188713763,
                -0.29983046890076320,
                -0.10132627352194944,
                0.10132627352194944,
                0.29983046890076320,
                0.48605942188713763,
                0.65238870288249307,
                0.79200829186181509,
                0.89920053309347214,
                0.96956804627021798,
                1.
            };
        default:
            throw std::runtime_error("Supported orders are 1 - 15");
    }
}

inline std::vector<double> GetGllWeights(size_t order) {
    switch (order) {
        case 1UL:
            return std::vector{1., 1.};
        case 2UL:
            return std::vector{1. / 3., 4. / 3., 1. / 3.};
        case 3UL:
            return std::vector{1. / 6., 5. / 6., 5. / 6., 1. / 6.};
        case 4UL:
            return std::vector{1. / 10., 49. / 90., 32. / 45., 49. / 90., 1. / 10.};
        case 5UL:
            return std::vector{
                1. / 15.,
                (14. - std::sqrt(7.)) / 30.,
                (14. + std::sqrt(7.)) / 30.,
                (14. + std::sqrt(7.)) / 30.,
                (14. - std::sqrt(7.)) / 30.,
                1. / 15.
            };
        case 6UL:
            return std::vector{1. / 21.,
                               (124. - 7. * std::sqrt(15.)) / 350.,
                               (124. + 7. * std::sqrt(15.)) / 350.,
                               256. / 525.,
                               (124. + 7. * std::sqrt(15.)) / 350.,
                               (124. - 7. * std::sqrt(15.)) / 350,
                               1. / 21.};
        case 7UL:
            return std::vector{3.5714285714285712E-002, 0.21070422714350615,    0.34112269248350441,
                               0.41245879465870372,     0.41245879465870372,    0.34112269248350441,
                               0.21070422714350615,     3.5714285714285712E-002};
        case 8UL:
            return std::vector{2.7777777777777776E-002, 0.16549536156080552,
                               0.27453871250016160,     0.34642851097304617,
                               0.37151927437641724,     0.34642851097304617,
                               0.27453871250016160,     0.16549536156080552,
                               2.7777777777777776E-002};
        case 9UL:
            return std::vector{2.2222222222222223E-002, 0.13330599085107006, 0.22488934206312636,
                               0.29204268367968378,     0.32753976118389744, 0.32753976118389744,
                               0.29204268367968378,     0.22488934206312636, 0.13330599085107006,
                               2.2222222222222223E-002};
        case 10UL:
            return std::vector{1.8181818181818181E-002, 0.10961227326699498,    0.18716988178030541,
                               0.24804810426402829,     0.28687912477900801,    0.30021759545569071,
                               0.28687912477900823,     0.24804810426402829,    0.18716988178030541,
                               0.10961227326699498,     1.8181818181818181E-002};
        case 11UL:
            return std::vector{1.5151515151515152E-002, 9.1684517413196109E-002,
                               0.15797470556437004,     0.21250841776102122,
                               0.25127560319920106,     0.27140524091069618,
                               0.27140524091069618,     0.25127560319920106,
                               0.21250841776102122,     0.15797470556437004,
                               9.1684517413196109E-002, 1.5151515151515152E-002};
        case 12UL:
            return std::vector{1.2820512820512820E-002, 7.7801686746818866E-002,
                               0.13498192668960840,     0.18364686520355006,
                               0.22076779356611012,     0.24401579030667625,
                               0.25193084933344673,     0.24401579030667625,
                               0.22076779356611012,     0.18364686520355006,
                               0.13498192668960840,     7.7801686746818866E-002,
                               1.2820512820512820E-002};
        case 13UL:
            return std::vector{1.0989010989010990E-002, 6.6837284497681185E-002, 0.11658665589871173,
                               0.16002185176295217,     0.19482614937341614,     0.21912625300977098,
                               0.23161279446845698,     0.23161279446845698,     0.21912625300977098,
                               0.19482614937341600,     0.16002185176295217,     0.11658665589871173,
                               6.6837284497681185E-002, 1.0989010989010990E-002};
        case 14UL:
            return std::vector{
                9.5238095238095247E-003, 5.8029893028601086E-002, 0.10166007032571801,
                0.14051169980242798,     0.17278964725360088,     0.19698723596461334,
                0.21197358592682095,     0.21704811634881566,     0.21197358592682075,
                0.19698723596461334,     0.17278964725360088,     0.14051169980242798,
                0.10166007032571801,     5.8029893028601086E-002, 9.5238095238095247E-003
            };
        case 15UL:
            return std::vector{8.3333333333333332E-003, 5.0850361005920039E-002,
                               8.9393697325930832E-002, 0.12425538213251400,
                               0.15402698080716443,     0.17749191339170411,
                               0.19369002382520362,     0.20195830817822993,
                               0.20195830817822993,     0.19369002382520362,
                               0.17749191339170411,     0.15402698080716443,
                               0.12425538213251400,     8.9393697325930832E-002,
                               5.0850361005920039E-002, 8.3333333333333332E-003};
        default:
            throw std::runtime_error("Supported orders are 1 - 15");
    }
}

}  // namespace kynema::math
